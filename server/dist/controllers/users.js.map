{"version":3,"sources":["../../server/controllers/users.js"],"names":["user","module","exports","createUser","req","res","newUser","create","username","body","toLowerCase","email","password","generateHash","phone","then","result","loggedInUser","userId","id","session","status","send","catch","title","message","log","error","getUser","findOne","attributes","where","$or","verifyHash","getAllUsers","findAll","logOut"],"mappings":"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","file":"users.js","sourcesContent":["import models from '../models';\nimport auth from './authen';\n\nconst user = models.user;\n\n// add a user record to the user table\nmodule.exports.createUser = (req, res) => {\n  const newUser = user\n    .create({\n      username: req.body.username.toLowerCase(),\n      email: req.body.email.toLowerCase(),\n      password: auth.generateHash(req.body.password),\n      phone: req.body.phone\n    })\n    .then((result) => {\n      const loggedInUser =\n        { userId: result.id, username: result.username, email: result.email };\n\n      // TODO set session\n      req.session.user = result;\n\n      res.status(200).send(loggedInUser);\n    })\n    .catch(error => res.status(400).send({ title: 'Oops...',\n      message: 'Error Creating user. See log below for more info',\n      log: error }));\n\n  return newUser;\n};\n\n\n// get a user from the users table\nmodule.exports.getUser = (req, res) => {\n  const newUser = user\n    .findOne({\n      attributes: ['id', 'username', 'email', 'password'],\n      where: {\n        $or: [\n          { username: req.body.username.toLowerCase() },\n          { email: req.body.email.toLowerCase() }\n        ]\n      }\n    })\n    .then((result) => {\n      if (!result) {\n        return res.status(404).send({\n          message: 'Username or email does not exist!',\n        });\n      }\n\n      if (auth.verifyHash(req.body.password, result.password)) {\n        // create session\n        req.session.user = result;\n        return res.status(200).send(\n          { id: result.id,\n            username: result.username,\n            email: result.email,\n            phone: result.phone });\n      }\n    })\n    .catch(error => res.status(400).send(error));\n\n  return newUser;\n};\n\n\n\n\n// get all users on the users table\nmodule.exports.getAllUsers = (req, res) => {\n  const newUser = user\n    .findAll({\n      attributes: ['id', 'username', 'email', 'phone']\n    })\n    .then((result) => {\n      if (!result) {\n        return res.status(404).send({\n          message: 'No User Found',\n        });\n      }\n\n      return res.status(200).send(result);\n    })\n    .catch(error => res.status(400).send(error));\n\n  return newUser;\n};\n\nmodule.exports.logOut = (req, res) => {\n  req.session.user = null;\n  res.status(200).send({ title: 'PostIt bids Goodbye...',\n    message: 'Thanks for your time...' });\n};\n"]}