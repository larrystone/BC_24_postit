{"version":3,"sources":["../../server/controllers/users.1.js"],"names":["user","module","exports","createUser","req","res","newUser","create","username","body","email","password","phone","then","status","send","result","catch","error","getUser","findOne","where","$or","message"],"mappings":";;AAAA;;;;;;AAEA,IAAMA,OAAO,iBAAOA,IAApB;;AAEAC,OAAOC,OAAP,CAAeC,UAAf,GAA4B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxC,MAAMC,UAAUN,KACbO,MADa,CACN;AACNC,cAAUJ,IAAIK,IAAJ,CAASD,QADb;AAENE,WAAON,IAAIK,IAAJ,CAASC,KAFV;AAGNC,cAAUP,IAAIK,IAAJ,CAASE,QAHb;AAINC,WAAOR,IAAIK,IAAJ,CAASG;AAJV,GADM,EAObC,IAPa,CAOR;AAAA,WAAUR,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,MAArB,CAAV;AAAA,GAPQ,EAQbC,KARa,CAQP;AAAA,WAASZ,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,KAArB,CAAT;AAAA,GARO,CAAhB;;AAUA,SAAOZ,OAAP;AACD,CAZD;;AAeAL,OAAOC,OAAP,CAAeiB,OAAf,GAAyB,UAACf,GAAD,EAAMC,GAAN,EAAc;AACrC,MAAMC,UAAUN,KACboB,OADa,CACL;AACPC,WAAO;AACLC,WAAK,CACH,EAAEd,UAAUJ,IAAIK,IAAJ,CAASD,QAArB,EADG,EAEH,EAAEE,OAAON,IAAIK,IAAJ,CAASC,KAAlB,EAFG,CADA;AAKLC,gBAAUP,IAAIK,IAAJ,CAASE;AALd;AADA,GADK,EAUbE,IAVa,CAUR,UAACG,MAAD,EAAY;AAChB,QAAI,CAACA,MAAL,EAAa;AACX,aAAOX,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BQ,iBAAS;AADiB,OAArB,CAAP;AAGD;;AAED,WAAOlB,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,MAArB,CAAP;AACD,GAlBa,EAmBbC,KAnBa,CAmBP;AAAA,WAASZ,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,KAArB,CAAT;AAAA,GAnBO,CAAhB;;AAqBA,SAAOZ,OAAP;AACD,CAvBD","file":"users.1.js","sourcesContent":["import models from '../models';\n\nconst user = models.user;\n\nmodule.exports.createUser = (req, res) => {\n  const newUser = user\n    .create({\n      username: req.body.username,\n      email: req.body.email,\n      password: req.body.password,\n      phone: req.body.phone\n    })\n    .then(result => res.status(201).send(result))\n    .catch(error => res.status(400).send(error));\n\n  return newUser;\n};\n\n\nmodule.exports.getUser = (req, res) => {\n  const newUser = user\n    .findOne({\n      where: {\n        $or: [\n          { username: req.body.username },\n          { email: req.body.email }\n        ],\n        password: req.body.password\n      }\n    })\n    .then((result) => {\n      if (!result) {\n        return res.status(404).send({\n          message: 'User Not Found',\n        });\n      }\n\n      return res.status(200).send(result);\n    })\n    .catch(error => res.status(400).send(error));\n\n  return newUser;\n};\n"]}