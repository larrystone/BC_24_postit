{"version":3,"sources":["../../server/controllers/authen.js"],"names":["module","exports","generateHash","password","salt","genSaltSync","hash","hashSync","verifyHash","status","compareSync"],"mappings":";;AAAA;;;;;;AAEAA,OAAOC,OAAP,CAAeC,YAAf,GAA8B,UAACC,QAAD,EAAc;AAC1C,MAAMC,OAAO,iBAAOC,WAAP,CAAmB,EAAnB,CAAb;AACA,MAAMC,OAAO,iBAAOC,QAAP,CAAgBJ,QAAhB,EAA0BC,IAA1B,CAAb;;AAEA,SAAOE,IAAP;AACD,CALD;;AAOAN,OAAOC,OAAP,CAAeO,UAAf,GAA4B,UAACL,QAAD,EAAWG,IAAX,EAAoB;AAC9C,MAAMG,SAAS,iBAAOC,WAAP,CAAmBP,QAAnB,EAA6BG,IAA7B,CAAf;AACA,SAAOG,MAAP;AACD,CAHD;;AAMA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA","file":"authen.js","sourcesContent":["import bcrypt from 'bcrypt';\n\nmodule.exports.generateHash = (password) => {\n  const salt = bcrypt.genSaltSync(10);\n  const hash = bcrypt.hashSync(password, salt);\n\n  return hash;\n};\n\nmodule.exports.verifyHash = (password, hash) => {\n  const status = bcrypt.compareSync(password, hash);\n  return status;\n};\n\n\n// import jwt from 'jsonwebtoken';\n\n// const secret = 'mysecret';\n\n// module.exports.generateToken = (currentUser) => {\n//   const access = 'auth';\n//   const token = jwt.sign({ id: currentUser.id, access }, secret)\n//     .toString();\n//   return token;\n// };\n\n// module.exports.verifyToken = (token) => {\n//   let decoded;\n//   try {\n//     decoded = jwt.verify(token, secret)\n//   } catch (e) {\n\n//   }\n\n//   return decoded;\n// };\n"]}